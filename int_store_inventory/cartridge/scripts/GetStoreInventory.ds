/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @output Store : Object
*
*/
importPackage( dw.util );
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.net );
importPackage(dw.object);

function execute( pdict : PipelineDictionary ) : Number
{


var display="Manas das";


    /*This to be used if we are nt able to connect to external server  */
     var data : Object = {
			'SiteCode': 123,
			'VerificationKey': "bbbb",
			'JpPostalCode': "sss",
			'ShipFromBaseNo': "sdsasada"
		};
		
		var json = JSON.stringify(data);
	
		
	   	var featureEnabled = dw.system.Site.getCurrent().getCustomPreferenceValue('intStoreInventoryEnabled');
		var customURL= dw.system.Site.getCurrent().getCustomPreferenceValue('customURL');

  try {
		var httpClient : HTTPClient = new HTTPClient();
		httpClient.setTimeout(5000);
	
	  // httpClient.open('GET', customURL);
	    var myUrl="http://49.248.219.235/dwinteract/store/product/";
	    httpClient.open('GET',myUrl+'25518769');
		
		httpClient.send();
		

		if (httpClient.statusCode == 200) {
			
			
			pdict.Store =  JSON.parse(httpClient.text);
			Logger.info("Received Stores Info: "+ httpClient.text);
			
			return PIPELET_NEXT;
		} else {
			// error handling
			//return "An error retreiving reviews from Bazaarvoice occured " + httpClient.statusCode;
			return PIPELET_NEXT;
		}

	} catch (e) {
		var e=e;
		//return "An error retreiving reviews from Bazaarvoice" + e;
		return PIPELET_NEXT;
	}
}
