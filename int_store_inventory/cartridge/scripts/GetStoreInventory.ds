/**
* Script file for use in the Script pipelet node.
* To define input and output parameters, create entries of the form:
*
* @<paramUsageType> <paramName> : <paramDataType> [<paramComment>]
*
* where
*   <paramUsageType> can be either 'input' or 'output'
*   <paramName> can be any valid parameter name
*   <paramDataType> identifies the type of the parameter
*   <paramComment> is an optional comment
*
* For example:
*
*    @output Store : Object
*
*/
importPackage( dw.util );
importPackage( dw.system );
importPackage( dw.catalog );
importPackage( dw.net );
importPackage(dw.object);

function execute( pdict : PipelineDictionary ) : Number
{


var display="Manas das";


    /*This to be used if we are nt able to connect to external server  */
     var data : Object = 
			[
  {
    'storeId': '2',
    'storeName': 'Croma',
    'storeType': 'Electronics Stores',
    'quantity': 130,
    'productId': '25518769',
    'address': {
      'id': '2',
      'country': 'USA',
      'state': 'Texas',
      'city': 'Houston',
      'street': 'Westheimer Rd',
      'zipCode': '77056',
      'addressLine1': '5085 Westheimer Rd'
    }
  },
  {
    'storeId': '3',
    'storeName': 'Apollo Pharmacy',
    'storeType': 'Chemist stores',
    'quantity': 0,
    'productId': '25565088',
    'address': {
      'id': '3',
      'country': 'USA',
      'state': 'FL',
      'city': 'MIAMI',
      'street': 'SUITE 204',
      'zipCode': '33122',
      'addressLine1': '2801 NW 74TH AVENUE'
    }
  },
  {
    'storeId': '4',
    'storeName': 'Francescas Collections',
    'storeType': 'Garments stores',
    'quantity': 1,
    'productId': '25518958',
    'address': {
      'id': '4',
      'country': 'USA',
      'state': 'NJ',
      'city': 'SPRINGFIELD',
      'street': 'UNIT #14',
      'zipCode': '07081',
      'addressLine1': '21 FADEM ROAD'
    }
  }
]
		;
		
		var json = JSON.stringify(data);
	
		
	   	var featureEnabled = dw.system.Site.getCurrent().getCustomPreferenceValue('intStoreInventoryEnabled');
		var customURL= dw.system.Site.getCurrent().getCustomPreferenceValue('customURL');

  try {
	/*	var httpClient : HTTPClient = new HTTPClient();
		httpClient.setTimeout(5000);
	
		httpClient.open('GET', "https://www.w3schools.com/xml/note.xml");
		httpClient.send();
		

		if (httpClient.statusCode == 200) {
			
			
			pdict.Store =  JSON.parse(httpClient.text);
			Logger.info("Received Stores Info: "+ httpClient.text);
			
			return PIPELET_NEXT;
		} else {
			// error handling
			//return "An error retreiving reviews from Bazaarvoice occured " + httpClient.statusCode;
			return PIPELET_NEXT;
		}
*/
pdict.Store =  JSON.parse(json);

	} catch (e) {
		var e=e;
		//return "An error retreiving reviews from Bazaarvoice" + e;
		return PIPELET_NEXT;
	}
}
